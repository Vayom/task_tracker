"""add user model

Revision ID: 699d36aa78db
Revises: 2b1dae2f783d
Create Date: 2024-04-24 12:18:15.195795

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '699d36aa78db'
down_revision: Union[str, None] = '2b1dae2f783d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('MANAGER', 'TEAM_LEAD', 'DEVELOPER', 'TEST_ENGINEER', name='user_role'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.add_column('tasks', sa.Column('assignee_id', sa.Integer(), nullable=True))
    op.add_column('tasks', sa.Column('creator_id', sa.Integer(), nullable=True))
    op.alter_column('tasks', 'type',
               existing_type=postgresql.ENUM('task', 'bug', name='task_type'),
               type_=sa.Enum('TASK', 'BUG', name='task_type'),
               existing_nullable=True)
    op.alter_column('tasks', 'priority',
               existing_type=postgresql.ENUM('critical', 'high', 'medium', 'low', name='task_priority'),
               type_=sa.Enum('CRITICAL', 'HIGH', 'MEDIUM', 'LOW', name='task_priority'),
               existing_nullable=True)
    op.alter_column('tasks', 'status',
               existing_type=postgresql.ENUM('to_do', 'in_progress', 'code_review', 'dev_test', 'testing', 'done', 'wont_fix', name='task_status'),
               type_=sa.Enum('TO_DO', 'IN_PROGRESS', 'CODE_REVIEW', 'DEV_TEST', 'TESTING', 'DONE', 'WONTFIX', name='task_status'),
               existing_nullable=True)
    op.create_foreign_key(None, 'tasks', 'users', ['creator_id'], ['id'])
    op.create_foreign_key(None, 'tasks', 'users', ['assignee_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.drop_constraint(None, 'tasks', type_='foreignkey')
    op.alter_column('tasks', 'status',
               existing_type=sa.Enum('TO_DO', 'IN_PROGRESS', 'CODE_REVIEW', 'DEV_TEST', 'TESTING', 'DONE', 'WONTFIX', name='task_status'),
               type_=postgresql.ENUM('to_do', 'in_progress', 'code_review', 'dev_test', 'testing', 'done', 'wont_fix', name='task_status'),
               existing_nullable=True)
    op.alter_column('tasks', 'priority',
               existing_type=sa.Enum('CRITICAL', 'HIGH', 'MEDIUM', 'LOW', name='task_priority'),
               type_=postgresql.ENUM('critical', 'high', 'medium', 'low', name='task_priority'),
               existing_nullable=True)
    op.alter_column('tasks', 'type',
               existing_type=sa.Enum('TASK', 'BUG', name='task_type'),
               type_=postgresql.ENUM('task', 'bug', name='task_type'),
               existing_nullable=True)
    op.drop_column('tasks', 'creator_id')
    op.drop_column('tasks', 'assignee_id')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
